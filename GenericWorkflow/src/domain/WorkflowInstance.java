package domain;

// Generated Sep 16, 2013 9:37:49 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * GwWorkflowInstance generated by hbm2java
 */
@Entity
@Table(name = "gw_workflow_instance", catalog = "genericworkflow")
public class WorkflowInstance implements java.io.Serializable {

	private Integer id;
	private WorkflowState currentState;
	private Workflow workflow;
	private byte[] data;
	private Date creationDate;
	private Set<WorkflowState> workflowStates = new HashSet<WorkflowState>(0);

	public WorkflowInstance() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workflow")
	public Workflow getWorkflow() {
		return this.workflow;
	}

	public void setWorkflow(Workflow workflow) {
		this.workflow = workflow;
	}

	@Column(name = "data")
	public byte[] getData() {
		return this.data;
	}

	public void setData(byte[] data) {
		this.data = data;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creationDate", length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workflowInstance")
	public Set<WorkflowState> getWorkflowStates() {
		return this.workflowStates;
	}

	public void setWorkflowStates(Set<WorkflowState> workflowStates) {
		this.workflowStates = workflowStates;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "currentState")
	public WorkflowState getCurrentState() {
		return currentState;
	}

	public void setCurrentState(WorkflowState currentState) {
		this.currentState = currentState;
	}

}
